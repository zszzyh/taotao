<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--注解驱动-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- AOP式方法级权限检查  -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!--注解扫描-->
    <context:component-scan base-package="com.cwb"/>




    <!--默认的servlet-->
    <mvc:default-servlet-handler/>


    <!-- 开启AOP注解扫描 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!--前缀后缀拼接bean-->
    <!--配置资源地址 /WEB-INF/xx.jsp-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="jspViewResolver">
        <!--地址前缀-->
        <property name="prefix" value="/"/>
        <!--地址后缀-->
        <property name="suffix" value=".html"/>
        <!--<property name="suffix" value=".html"/>-->
    </bean>

    <!-- 上传转换器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置上传文件的最大尺寸为1MB -->
        <property name="maxUploadSize" value="1048576"/>
    </bean>

    <!--&lt;!&ndash; 注册拦截器 &ndash;&gt;-->
    <!--<mvc:interceptors>-->
        <!--&lt;!&ndash; 登录检查拦截器&ndash;&gt;-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<mvc:exclude-mapping path="/login.html"/>-->
            <!--<mvc:exclude-mapping path="/login/*"/>-->
            <!--<bean class="com.cwb.interceptor.LoginInterceptor"/>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->

    <!-- 处理异常-->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
        <!--<property name="exceptionMappings">-->
            <!--<props>-->
                <!--<prop key="java.lang.Exception">main/error</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- 注解方式配置事物 -->
    <tx:annotation-driven transaction-manager="transactionManager" />


    <context:property-placeholder location="classpath:db.properties"/>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${db.driver}"/>
        <property name="jdbcUrl" value="${db.url}"/>
        <property name="user" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <property name="maxIdleTime" value="${db.maxIdleTime}"/>
        <property name="maxPoolSize" value="${db.maxPoolSize}"/>
        <property name="minPoolSize" value="${db.minPoolSize}"/>
        <property name="acquireRetryDelay" value="${db.acquireRetryDelay}"/>
        <property name="acquireIncrement" value="${db.acquireIncrement}"/>
        <property name="acquireRetryAttempts" value="${db.acquireRetryAttempts}"/>
        <property name="breakAfterAcquireFailure" value="${db.breakAfterAcquireFailure}"/>
    </bean>

    <!--<bean id="sqlSessionFactory"-->
          <!--class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="configLocation" value="classpath:mybatis-config.xml"/>-->
        <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->

    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--<property name="basePackage" value="com.cwb"/>-->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
    <!--</bean>-->


    <!--<bean id="tbAdminMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
        <!--<property name="mapperInterface" value="com.cwb.dao.TbAdminMapper"/>-->
        <!--<property name="sqlSessionFactory" ref="sqlSessionFactory1"/>-->
    <!--</bean>-->
    <!--<bean id="sqlSessionFactory1"-->
          <!--class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--&lt;!&ndash;mybatis配置文件&ndash;&gt;-->
        <!--<property name="configLocation" value="classpath:mybatis-config.xml"/>-->
        <!--&lt;!&ndash;dataSource源数据&ndash;&gt;-->
        <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="dataSource" ref="dataSource"></property>
        <property name="mapperLocations" value="classpath:com/cwb/dao/impl/*.xml"></property>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="annotationClass" value="org.springframework.stereotype.Repository" />
        <property name="basePackage" value="com.cwb.dao"></property>
    </bean>



</beans>